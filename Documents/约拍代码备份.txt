
 #
            # elif request_type == '10241':  # 请求指定用户发布的所有约拍
            #     find_uid = self.get_argument('finduid')  # 指定用户的id
            #     try:
            #         user = self.db.query(User).filter(User.Uid == find_uid).one()
            #         self.ap_ask_user(user)
            #     except Exception, e:
            #         self.retjson['contents'] = '授权码不存在或已过期'
            #         self.retjson['code'] = '10214'














        # elif request_type == '10270':#在报名约拍中的人里选择约拍对象
        #    # uid = self.get_argument("uid",default="none")
        #
        #     m_AEapid=self.get_argument("AEapid",default="null")
        #     try:
        #         data=self.db.query(AppointEntry).filter(AppointEntry.AEapid==m_AEapid,AppointEntry.AEvalid==1).all()
        #         for item in data:
        #             ApInfo=self.db.query(User).filter(User.Uid==item.AEregisterID).one()
        #             ApImage=self.db.query(UserImage).filter(UserImage.UIuid==item.AEregisterID).one()
        #             APinfoFuncion.APinfochoose(ApInfo, ApImage, self.retdata)
        #             self.retjson['contents']= self.retdata
        #             self.retjson['code']='12703'
        #
        #     except Exception, e:
        #             print e
        #             self.retjson['contents']='选择约拍对象失败'
        #             self.retjson['code']='10270'
        # elif request_type == '10271':
        #    # choose = True
        #     m_APid=self.get_argument("APid",default="null")
        #     m_AEregisterid=self.get_argument("AEregisterid",default="null")
        #     m =int(m_AEregisterid)
        #     try:
        #         #data=self.db.query(AppointEntry).filter(AppointEntry.AEapid == m_APid and AppointEntry.AEregisterID == m_AEregisterid).one()
        #         data=self.db.query(AppointEntry).filter(AppointEntry.AEapid == m_APid and AppointEntry.AEregisterID == m).one()
        #         data.AEchoosed = True
        #         self.db.commit()
        #         self.retjson["code"]="10271"
        #         self.retjson["contents"]="选择成功！"
        #     except Exception, e:
        #         print e
        #         self.retjson['contents'] = '选择约拍对象失败'
        #         self.retdata['code'] = '10271'
        #
        # elif request_type =='10261':   #查看自己报名的约拍的结果
        #     uid = self.get_argument('uid')
        #     ap_id = self.get_argument('apid')
        #     try:
        #         u_result = self.db.query(AppointEntry.AEchoosed).\
        #             filter(AppointEntry.AEapid ==ap_id and AppointEntry.AEregisterID == uid).one()
        #         self.retjson['code'] = '10263'
        #         self.retjson['contents'] = u_result[0]
        #     except Exception,e:
        #         print e
        #         self.retjson['code'] = '10262'
        #         self.retjson['contents'] = '用户未参加此约拍的报名'
        # elif request_type == '10240':  # 请求用户自己发布的所有约拍
        #     try:
        #         user = self.db.query(User).filter(User.Uauthkey == auth_key).one()
        #         self.ap_ask_user(user)
        #     except Exception, e:
        #         self.retjson['contents'] = '授权码不存在或已过期'
        #         self.retjson['code'] = '10214'
        # elif request_type == '10241':  # 请求指定用户发布的所有约拍
        #     uid = self.get_argument('uid')  # 指定用户的id
        #     try:
        #         user = self.db.query(User).filter(User.Uid == uid).one()
        #         self.ap_ask_user(user)
        #     except Exception, e:
        #         self.retjson['contents'] = '授权码不存在或已过期'
        #         self.retjson['code'] = '10214'







    # @classmethod
    # def ApUserinfo(appointment, retdata):
    #         m_ApUserinfo = dict(
    #             Uid=appointment.Uid,  # 主键
    #             Upassword=appointment.Upassword,
    #             Utel=appointment.Utel,
    #             Ualais=appointment.Ualais,
    #             Uname=appointment.Uname,  # 真实姓名
    #             Ulocation=appointment.Ulocation,
    #             Umailbox=appointment.Umailbox,
    #
    #             Ubirthday=appointment.Ubirthday.strftime('%Y-%m-%dT%H:%M:%S'),
    #             Uscore=appointment.Uscore,
    #             UregistT=appointment.UregistT.strftime('%Y-%m-%dT%H:%M:%S'),
    #             Usex=appointment.Usex,
    #             Usign=appointment.Usign,
    #             Uauthkey=appointment.Uauthkey
    #         )
    #         retdata.append(m_ApUserinfo)
    #
    # @classmethod
    # def APinfochoose(appointment, appointment2, retdata):
       # '''返回我选择的人的'''
    #         m_APinfochoose = dict(
    #             Uid=appointment.Uid,
    #             Usign=appointment.Usign,
    #             Ualais=appointment.Ualais,
    #             UIurl=appointment2.UIurl,
    #         )
    #         retdata.append(m_APinfochoose)
